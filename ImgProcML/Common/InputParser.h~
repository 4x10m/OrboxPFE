#ifndef COMMON_INPUTPARSER_H
#define COMMON_INPUTPARSER_H

#include <string>
#include <vector>

using namespace std;

class InputParser{
    private:
        vector <string> tokens;
        
    public:
        InputParser (int &argc, char **argv){
            for (int i=1; i < argc; ++i)
                this->tokens.push_back(string(argv[i]));
        };
        
        /// @author iain
        const string& getCmdOption(const string &option) const{
            vector<string>::const_iterator itr;
            itr =  find(this->tokens.begin(), this->tokens.end(), option);
            if (itr != this->tokens.end() && ++itr != this->tokens.end()){
                return *itr;
            }
            return "";
        };
        
        /// @author iain
        bool cmdOptionExists(const string &option) const{
            return find(this->tokens.begin(), this->tokens.end(), option)
                   != this->tokens.end();
        };

};

#endif //COMMON_INPUTPARSER_H
